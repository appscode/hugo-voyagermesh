<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ingress on Secure HAProxy Ingress Controller for Kubernetes</title><link>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/</link><description>Recent content in Ingress on Secure HAProxy Ingress Controller for Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/debugging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/debugging/</guid><description> New to Voyager? Please start here.</description></item><item><title/><link>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/grpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/grpc/</guid><description> New to Voyager? Please start here.</description></item><item><title/><link>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/ssh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/ssh/</guid><description> New to Voyager? Please start here.</description></item><item><title/><link>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/websocket/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/websocket/</guid><description> New to Voyager? Please start here.</description></item><item><title>Avoid 503 with Graceful Server Shutdown | Voyager</title><link>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/graceful-reload/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/graceful-reload/</guid><description>New to Voyager? Please start here.
Avoid 503 with Graceful Server Shutdown Multiple Voyager users have been facing an issue regarding getting 503 response randomly after updating ingress. So, we looked into what was going wrong and here&amp;rsquo;s the solution and the reason behind this problem.
HAProxy supports both graceful and hard stop. For Voyager, we are using graceful stop. The graceful stop is triggered when the SIGUSR1 signal is sent to the haproxy process.</description></item><item><title>Ingress | Voyager</title><link>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/</guid><description>Guides Guides show you how to use Voyager as a Kubernetes Ingress controller.
HTTP Exposing Service via Ingress Virtual Hosting Supports Loadbalancer Source Range URL and Request Header Re-writing Enable CORS Custom HTTP Port Using External Service as Ingress Backend HSTS Forward Traffic to StatefulSet Pods Configure Sticky session to Backends Blue Green Deployments using weighted Loadbalancing TLS/SSL TLS Termination Multiple TLS Entries Backend TLS Supports AWS certificate manager TCP TCP LoadBalancing TCP SNI Configuration Customize generated HAProxy config via BackendRule (can be used for http rewriting, add health checks, etc.</description></item><item><title>Placement of Ingress Pods | Voyager</title><link>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/pod-placement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/pod-placement/</guid><description>New to Voyager? Please start here.
Placement of Ingress Pods Voyager has rich support for how HAProxy pods are placed on cluster nodes. Please check here to understand Kubernetes' support for pod placement.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.</description></item><item><title>Scaling Ingress | Voyager</title><link>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/scaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/guides/ingress/scaling/</guid><description>New to Voyager? Please start here.
Scaling Ingress Replicas For each Ingress resource, Voyager deploys HAProxy in a Deployment prefixed by voyager- and the name of the Ingress.
This Deployment has .spec.replicas = 1 by default. To start the ingress with the desired number of replicas, use the ingress.appscode.com/replicas annotation.
Note that, Voyager won&amp;rsquo;t sync with this annotation if there is a HPA controlling the ingress deployment. This regulation is followed so that HPA on ingress deployment does not experience any conflicts.</description></item></channel></rss>