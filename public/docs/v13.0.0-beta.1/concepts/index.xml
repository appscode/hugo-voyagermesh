<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guides on Secure HAProxy Ingress Controller for Kubernetes</title><link>https://voyagermesh.com/docs/v13.0.0-beta.1/concepts/</link><description>Recent content in Guides on Secure HAProxy Ingress Controller for Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://voyagermesh.com/docs/v13.0.0-beta.1/concepts/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://voyagermesh.com/docs/v13.0.0-beta.1/concepts/haproxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/concepts/haproxy/</guid><description/></item><item><title>Concepts | Voyager</title><link>https://voyagermesh.com/docs/v13.0.0-beta.1/concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/concepts/</guid><description>Concepts Concepts help you learn about the different parts of the Voyager and the abstractions it uses.
Overview. Provides a conceptual introduction to Voyager, including the problems it solves and its high-level architecture.
Types of Ingress
LoadBalancer. Explains how LoadBalancer type Ingress works. NodePort. Explains how NodePort type Ingress works. HostPort. Explains how HostPort type Ingress works. Internal. Explains how Internal type Ingress works.</description></item><item><title>Overview | Voyager</title><link>https://voyagermesh.com/docs/v13.0.0-beta.1/concepts/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v13.0.0-beta.1/concepts/overview/</guid><description>Voyager Voyager is a HAProxy backed secure L7 and L4 ingress controller for Kubernetes developed by AppsCode. This can be used with any Kubernetes cloud providers including aws, gce, gke, azure, acs. This can also be used with bare metal Kubernetes clusters.
Ingress Voyager provides L7 and L4 loadbalancing using Kubernetes standard Ingress resource. This is built on top of the HAProxy to support high availability, sticky sessions, name and path-based virtual hosting among other features.</description></item></channel></rss>