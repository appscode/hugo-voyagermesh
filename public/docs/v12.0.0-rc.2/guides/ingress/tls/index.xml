<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TLS on Secure HAProxy Ingress Controller for Kubernetes</title><link>https://voyagermesh.com/docs/v12.0.0-rc.2/guides/ingress/tls/</link><description>Recent content in TLS on Secure HAProxy Ingress Controller for Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://voyagermesh.com/docs/v12.0.0-rc.2/guides/ingress/tls/index.xml" rel="self" type="application/rss+xml"/><item><title>Backend TLS Support | Kubernetes Ingress</title><link>https://voyagermesh.com/docs/v12.0.0-rc.2/guides/ingress/tls/backend-tls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v12.0.0-rc.2/guides/ingress/tls/backend-tls/</guid><description>New to Voyager? Please start here.
Backend TLS Support Voyager can connect to a tls enabled backend server with or without ssl verification.
Available options:
ssl: Creates a TLS/SSL socket when connecting to this server in order to cipher/decipher the traffic. If verify not set the following error may occurred: Verify is enabled by default but no CA file specified. If you&amp;rsquo;re running on a LAN where you&amp;rsquo;re certain to trust the server&amp;rsquo;s certificate, please set an explicit &amp;lsquo;verify none&amp;rsquo; statement on the &amp;lsquo;server&amp;rsquo; line, or use &amp;lsquo;ssl-server-verify none&amp;rsquo; in the global section to disable server-side verifications by default.</description></item><item><title>Multiple TLS Certificates | Kubernetes Ingress</title><link>https://voyagermesh.com/docs/v12.0.0-rc.2/guides/ingress/tls/multiple-tls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v12.0.0-rc.2/guides/ingress/tls/multiple-tls/</guid><description>New to Voyager? Please start here.
Multiple TLS Certificates You can secure an Ingress by specifying TLS secrets or certificates.voyager.appscode.com resources inside spec.tls section of the Ingress. Voyager writes the TLS secrets in /etc/ssl/private/haproxy/tls/{secret-name}.pem files inside the HAProxy pod. So if you specify multiple TLS secrets, all of them will be mounted in /etc/ssl/private/haproxy/tls folder. HAProxy presents the certificate to clients which matches with the TLS Server Name Indication (SNI) field of the request.</description></item><item><title>TLS | Kubernetes Ingress</title><link>https://voyagermesh.com/docs/v12.0.0-rc.2/guides/ingress/tls/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v12.0.0-rc.2/guides/ingress/tls/overview/</guid><description>New to Voyager? Please start here.
TLS You can secure an Ingress by specifying a secret containing TLS pem or by referring a certificates.voyager.appscode.com resource. certificates.voyager.appscode.com can manage an certificate resource and use that certificate to encrypt communication.
This tutorial will show you how to secure an Ingress using TLS/SSL certificates.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Using AWS Certificate Manager | Kubernetes Ingress</title><link>https://voyagermesh.com/docs/v12.0.0-rc.2/guides/ingress/tls/aws-cert-manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/v12.0.0-rc.2/guides/ingress/tls/aws-cert-manager/</guid><description>New to Voyager? Please start here.
Using AWS Certificate Manager Voyager can use AWS certificate manager to terminate SSL connections for LoadBalancer type ingress in aws provider. To use this feature, add the following annotations to Ingress;
ingress.appscode.com/annotations-service: | { &amp;#34;service.beta.kubernetes.io/aws-load-balancer-ssl-cert&amp;#34;: &amp;#34;arn:aws:acm:...&amp;#34;, &amp;#34;service.beta.kubernetes.io/aws-load-balancer-backend-protocol&amp;#34;: &amp;#34;http&amp;#34;, &amp;#34;service.beta.kubernetes.io/aws-load-balancer-ssl-ports&amp;#34;: &amp;#34;443&amp;#34; } Voyager operator will apply these annotation on LoadBalancer service used to expose HAProxy to internet. This service will (logically) listen on port 443, terminate SSL and forward to port 80 on HAProxy pods.</description></item></channel></rss>