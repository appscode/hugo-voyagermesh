<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on Secure HAProxy Ingress Controller for Kubernetes</title><link>https://voyagermesh.com/docs/7.0.0-rc.0/guides/ingress/security/</link><description>Recent content in Security on Secure HAProxy Ingress Controller for Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://voyagermesh.com/docs/7.0.0-rc.0/guides/ingress/security/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://voyagermesh.com/docs/7.0.0-rc.0/guides/ingress/security/restrict-namespace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/7.0.0-rc.0/guides/ingress/security/restrict-namespace/</guid><description> New to Voyager? Please start here.</description></item><item><title>Basic Authentication | Kubernetes Ingress</title><link>https://voyagermesh.com/docs/7.0.0-rc.0/guides/ingress/security/basic-auth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/7.0.0-rc.0/guides/ingress/security/basic-auth/</guid><description>New to Voyager? Please start here.
Basic Authentication This example demonstrates how to configure Basic Authentication on Voyager Ingress controller.
Using Basic Authentication Voyager Ingress read user and password from files stored on secrets, one user and password per line. Secret name, realm and type are configured with annotations in the ingress resource:
ingress.appscode.com/auth-type: the only supported type is basic ingress.appscode.com/auth-realm: an optional string with authentication realm ingress.</description></item><item><title>OAuth2 Authentication | Kubernetes Ingress</title><link>https://voyagermesh.com/docs/7.0.0-rc.0/guides/ingress/security/oauth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/7.0.0-rc.0/guides/ingress/security/oauth/</guid><description>New to Voyager? Please start here.
OAuth2 Authentication You can configure external authentication / oauth on Voyager Ingress controller via frontendrules. For this you have to configure and expose oauth2-proxy and specify it as a backend under same host.
This example will demonstrate how to configure external authentication in both TLS and non-TLS mode using github as auth provider.
Example using Github (non-TLS) First create a new github oauth app from here and generate client-id and client-secret.</description></item><item><title>TLS Authentication | Kubernetes Ingress</title><link>https://voyagermesh.com/docs/7.0.0-rc.0/guides/ingress/security/tls-auth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/7.0.0-rc.0/guides/ingress/security/tls-auth/</guid><description>New to Voyager? Please start here.
TLS Authentication This example demonstrates how to configure TLS Authentication on Voyager Ingress controller.
Using tls auth in Ingress Using tls auth in Frontend Before diving into the deep learn about TLS Auth with HAProxy.
SSL Client certificate management at application level Client side ssl certificates Using TLS Authentication Voyager Ingress read ca certificates from files stored on secrets with ca.</description></item></channel></rss>