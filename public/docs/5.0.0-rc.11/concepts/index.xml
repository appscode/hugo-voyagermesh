<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guides on Secure HAProxy Ingress Controller for Kubernetes</title><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/</link><description>Recent content in Guides on Secure HAProxy Ingress Controller for Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://voyagermesh.com/docs/5.0.0-rc.11/concepts/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/external-ip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/external-ip/</guid><description/></item><item><title/><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/haproxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/haproxy/</guid><description/></item><item><title/><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-class/</guid><description>Running voyager alongside with other ingress controller Voyager can be configured to handle default kubernetes ingress or only ingress.appscode.com. voyager can also be run along side with other controllers.
--ingress-class // this flag can be set to 'voyager' to handle only ingress // with annotation kubernetes.io/ingress.class=voyager. // If unset, voyager will also handle ingress without ingress-class annotation.</description></item><item><title/><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-merging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-merging/</guid><description/></item><item><title/><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-types/hostport/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-types/hostport/</guid><description/></item><item><title/><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-types/internal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-types/internal/</guid><description/></item><item><title/><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-types/loadbalancer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-types/loadbalancer/</guid><description/></item><item><title/><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-types/nodeport/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/ingress-types/nodeport/</guid><description/></item><item><title>Concepts | Voyager</title><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/</guid><description>Concepts Concepts help you learn about the different parts of the Voyager and the abstractions it uses.
Overview. Provides a conceptual introduction to Voyager, including the problems it solves and its high-level architecture.</description></item><item><title>Overview | Voyager</title><link>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://voyagermesh.com/docs/5.0.0-rc.11/concepts/overview/</guid><description>Voyager Voyager is a HAProxy backed secure L7 and L4 ingress controller for Kubernetes developed by AppsCode. This can be used with any Kubernetes cloud providers including aws, gce, gke, azure, acs. This can also be used with bare metal Kubernetes clusters.
Ingress Voyager provides L7 and L4 loadbalancing using a custom Kubernetes Ingress resource. This is built on top of the HAProxy to support high availability, sticky sessions, name and path-based virtual hosting.</description></item></channel></rss>